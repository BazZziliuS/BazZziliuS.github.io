(function () {
    'use strict'

    /** –ò–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */
    const icons = {
        add_interface_plugin: 'üñºÔ∏è',
        add_management_plugin: '‚öôÔ∏è',
        add_online_plugin: 'üåê',
        add_torrent_plugin: 'üåÄ',
        add_tv_plugin: 'üì∫'
    }

    /** –°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤ */
    const pluginsList = [
        { component: 'add_interface_plugin', key: 'in_quality', name: '–í –∫–∞—á–µ—Å—Ç–≤–µ', description: '–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–∫–ª–∞–¥–∫—É —Å –Ω–æ–≤–∏–Ω–∫–∞–º–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ', url: 'https://bazzzilius.github.io/scripts/in_quality.js', author: '@bylampa' },
        { component: 'add_interface_plugin', key: 'notice', name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', description: '–ù–æ–≤–æ—Å—Ç–∏ –ø–ª–∞–≥–∏–Ω–∞', url: 'https://bazzzilius.github.io/scripts/notice.js', author: '@BazZziliuS' },

        { component: 'add_management_plugin', key: 'exit_menu', name: '–í—ã—Ö–æ–¥', description: '–ü—É–Ω–∫—Ç –≤—ã—Ö–æ–¥–∞ –≤ –º–µ–Ω—é', url: 'https://tsynik.github.io/lampa/e.js', author: '@tsynik' },
        { component: 'add_management_plugin', key: 'hot_buttons', name: '–ì–æ—Ä—è—á–∏–µ –∫–Ω–æ–ø–∫–∏', description: '–ö–Ω–æ–ø–∫–∏ –ø—É–ª—å—Ç–∞ –¥–ª—è –ø–ª–µ–µ—Ä–∞', url: 'https://nnmdd.github.io/lampa_hotkeys/hotkeys.js', author: '@nnmd' },

        { component: 'add_online_plugin', key: 'online_mod', name: 'Online_Mod', description: '7 –±–∞–ª–∞–Ω—Å–µ—Ä–æ–≤ –¥–ª—è –æ–Ω–ª–∞–π–Ω-–ø—Ä–æ—Å–º–æ—Ç—Ä–∞', url: 'https://nb557.github.io/plugins/online_mod.js', author: '@t_anton' },

        { component: 'add_torrent_plugin', key: 'switch_parser', name: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–æ–≤', description: '–°–ø–∏—Å–æ–∫ jacketts –¥–ª—è –≤—ã–±–æ—Ä–∞', url: 'https://bazzzilius.github.io/scripts/jackett.js', author: '@AndreyURL54' },

        { component: 'add_tv_plugin', key: 'diesel', name: '–î–∏–∑–µ–ª—å –¢–í', description: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–µ–ª–µ–∫–∞–Ω–∞–ª—ã —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –∏ –∞—Ä—Ö–∏–≤–æ–º', url: 'https://andreyurl54.github.io/diesel5/diesel.js', author: '@AndreyURL54' }
    ]

    /** –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞ */
    function installPlugin(plugin) {
        const plugins = Lampa.Storage.get('plugins') || []
        if (plugins.find(p => p.url === plugin.url)) {
            return Lampa.Noty.show('–£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
        }

        plugins.push({ author: plugin.author, url: plugin.url, name: plugin.name, status: 1 })
        Lampa.Storage.set('plugins', plugins)

        const script = document.createElement('script')
        script.src = plugin.url
        document.head.appendChild(script)

        Lampa.Noty.show('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ' + plugin.name)
    }

    /** –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ */
    function removePlugin(plugin) {
        const plugins = Lampa.Storage.get('plugins') || []
        const updated = plugins.filter(p => p.url !== plugin.url)
        Lampa.Storage.set('plugins', updated)
        Lampa.Noty.show('–£–¥–∞–ª—ë–Ω: ' + plugin.name)
    }

    /** –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ */
    function isInstalled(plugin) {
        const plugins = Lampa.Storage.get('plugins') || []
        return plugins.some(p => p.url === plugin.url && p.status !== 0)
    }

    /** –≠–∫—Ä–∞–Ω –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
    function AddonsCategory(category) {
        const scroll = new Lampa.Scroll({ mask: true, over: true })
        const html = $('<div class="addons_category"><div class="addons_category__body"></div></div>')
        const body = html.find('.addons_category__body')
        let items = []

        this.create = () => {
            this.activity.loader(true)
            body.append(scroll.render(true))

            const list = pluginsList.filter(p => p.component === category)

            list.forEach(plugin => {
                const el = $(`<div class="selector addon__item">
                    <div style="font-size:1.2em; color:#ff9800">${plugin.name}</div>
                    <div style="font-size:0.9em; color:#ccc; margin:.3em 0">${plugin.description}</div>
                    <div style="font-size:0.8em; color:#666">–ê–≤—Ç–æ—Ä: ${plugin.author}</div>
                    <div style="margin-top:.5em;">
                        <button class="addon__btn install">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å</button>
                        <button class="addon__btn remove">–£–¥–∞–ª–∏—Ç—å</button>
                    </div>
                </div>`)

                el.find('.install').on('click', () => installPlugin(plugin))
                el.find('.remove').on('click', () => removePlugin(plugin))

                el.on('hover:focus', () => scroll.update(el))
                scroll.append(el)
                items.push(el)
            })

            this.activity.loader(false)
            this.activity.toggle()
            return this.render()
        }

        this.start = () => {
            Lampa.Controller.add('addons_category', {
                toggle() {
                    Lampa.Controller.collectionSet(scroll.render())
                    Lampa.Controller.collectionFocus(items[0]?.[0] || false, scroll.render())
                },
                back: this.back,
                up() { Navigator.move('up') },
                down() { Navigator.move('down') },
                left() { if (Navigator.canmove('left')) Navigator.move('left'); else Lampa.Controller.toggle('menu') },
                right() { Navigator.move('right') }
            })
            Lampa.Controller.toggle('addons_category')
        }

        this.back = () => Lampa.Activity.backward()
        this.render = () => html
        this.destroy = () => { scroll.destroy(); html.remove() }
    }

    /** –≠–∫—Ä–∞–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π */
    function AddonsRoot() {
        const scroll = new Lampa.Scroll({ mask: true, over: true })
        const html = $('<div class="addons_root"><div class="addons_root__body"></div></div>')
        const body = html.find('.addons_root__body')
        let items = []

        const categories = [
            { title: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å', component: 'add_interface_plugin' },
            { title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', component: 'add_management_plugin' },
            { title: '–û–Ω–ª–∞–π–Ω', component: 'add_online_plugin' },
            { title: '–¢–æ—Ä—Ä–µ–Ω—Ç—ã', component: 'add_torrent_plugin' },
            { title: '–¢–í', component: 'add_tv_plugin' }
        ]

        this.create = () => {
            this.activity.loader(true)
            body.append(scroll.render(true))

            categories.forEach(cat => {
                const el = $(`<div class="selector addons_root__item">
                    <span style="font-size:1.5em; margin-right:.5em">${icons[cat.component]}</span>
                    <span>${cat.title}</span>
                </div>`)

                el.on('hover:enter', () => {
                    Lampa.Activity.push({
                        title: cat.title,
                        component: 'addons_category',
                        page: 1,
                        url: cat.component
                    })
                })
                el.on('hover:focus', () => scroll.update(el))
                scroll.append(el)
                items.push(el)
            })

            this.activity.loader(false)
            this.activity.toggle()
            return this.render()
        }

        this.start = () => {
            Lampa.Controller.add('addons_root', {
                toggle() {
                    Lampa.Controller.collectionSet(scroll.render())
                    Lampa.Controller.collectionFocus(items[0]?.[0] || false, scroll.render())
                },
                back: this.back,
                up() { Navigator.move('up') },
                down() { Navigator.move('down') },
                left() { if (Navigator.canmove('left')) Navigator.move('left'); else Lampa.Controller.toggle('menu') },
                right() { Navigator.move('right') }
            })
            Lampa.Controller.toggle('addons_root')
        }

        this.back = () => Lampa.Activity.backward()
        this.render = () => html
        this.destroy = () => { scroll.destroy(); html.remove() }
    }

    /** –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω—ã */
    Lampa.Component.add('addons_root', AddonsRoot)
    Lampa.Component.add('addons_category', AddonsCategory)

    /** –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
    Lampa.Settings.add({
        title: '–ü–ª–∞–≥–∏–Ω—ã',
        group: 'plugins',
        onSelect: () => Lampa.Activity.push({
            title: '–ü–ª–∞–≥–∏–Ω—ã',
            component: 'addons_root',
            page: 1
        })
    })
})()
